// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotingApplication.Data;

#nullable disable

namespace VotingApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241121191418_CreateVotingAppTables")]
    partial class CreateVotingAppTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VotingApplication.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"));

                    b.Property<int>("ElectionElection")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId");

                    b.HasIndex("ElectionElection");

                    b.HasIndex("UserId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("VotingApplication.Models.Election", b =>
                {
                    b.Property<int>("ElectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElectionId"));

                    b.Property<DateTime>("ElectionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ElectionEndHour")
                        .HasColumnType("time");

                    b.Property<DateTime>("ElectionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ElectionStartHour")
                        .HasColumnType("time");

                    b.Property<int>("ElectionStatus")
                        .HasColumnType("int");

                    b.Property<string>("ElectionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ElectionId");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("VotingApplication.Models.Role", b =>
                {
                    b.Property<int>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolesId"));

                    b.Property<string>("RolesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolesId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("VotingApplication.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserElection")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRol")
                        .HasColumnType("int");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserElection");

                    b.HasIndex("UserRol");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VotingApplication.Models.Vote", b =>
                {
                    b.Property<int>("VotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VotesId"));

                    b.Property<int>("VotesCandidate")
                        .HasColumnType("int");

                    b.Property<DateTime>("VotesDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VotesElection")
                        .HasColumnType("int");

                    b.HasKey("VotesId");

                    b.HasIndex("VotesCandidate");

                    b.HasIndex("VotesElection");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("VotingApplication.Models.Candidate", b =>
                {
                    b.HasOne("VotingApplication.Models.Election", "Election")
                        .WithMany("Candidates")
                        .HasForeignKey("ElectionElection")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VotingApplication.Models.User", "User")
                        .WithMany("Candidates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Election");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VotingApplication.Models.User", b =>
                {
                    b.HasOne("VotingApplication.Models.Election", "Election")
                        .WithMany("Users")
                        .HasForeignKey("UserElection")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VotingApplication.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("UserRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Election");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("VotingApplication.Models.Vote", b =>
                {
                    b.HasOne("VotingApplication.Models.Candidate", "Candidate")
                        .WithMany("Votes")
                        .HasForeignKey("VotesCandidate")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VotingApplication.Models.Election", "Election")
                        .WithMany("Votes")
                        .HasForeignKey("VotesElection")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Election");
                });

            modelBuilder.Entity("VotingApplication.Models.Candidate", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("VotingApplication.Models.Election", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Users");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("VotingApplication.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("VotingApplication.Models.User", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
