@model IEnumerable<VotingApplication.Models.User>

@{
    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>User List</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New User</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().UserName)</th>
            <th>@Html.DisplayNameFor(model => model.First().Email)</th>
            <th>@Html.DisplayNameFor(model => model.First().UserRol)</th>
            <th>@Html.DisplayNameFor(model => model.First().UserStatus)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var user in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => user.UserName)</td>
                    <td>@Html.DisplayFor(modelItem => user.Email)</td>
                    <td>@Html.DisplayFor(modelItem => user.UserRol)</td> <!-- Consider displaying role name instead of ID -->
                    <td>@(user.UserStatus == 1 ? "Active" : "Inactive")</td> <!-- Display status as Active/Inactive -->
                    <td>
                        <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning">Edit</a> |
                        <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-info">Details</a> |
                        <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No users found.</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}